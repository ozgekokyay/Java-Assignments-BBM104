
						ArrayList<Integer> repeated= new ArrayList<Integer>();
						Stack<Integer> tmpStack = new Stack<Integer>(100); 
						Stack<Integer> originalStack = new Stack<Integer>(100);
						Stack<Integer> temp = new Stack<Integer>(100);
						System.out.println(stack.top());
						while(!stack.isEmpty()) {
							int num=stack.pop();
							originalStack.push(num);
							temp.push(num);
							
						}
						System.out.println(temp.top());
						stack=temp;
						
						
				        while(!stack.isEmpty()) 
				        { 
				            // pop out the first element 
				            int tmp = stack.pop();
				            
				          
				            // while temporary stack is not empty and 
				            // top of stack is greater than temp 
				            while(!tmpStack.isEmpty() && tmpStack.top()> tmp) 
				            { 
				                // pop from temporary stack and  
				                // push it to the input stack 
				            stack.push(tmpStack.pop()); 
				            
				            }   
				            // push temp in tempory of stack 
				            tmpStack.push(tmp);
				             
				        }
				        
					
						
						int size=tmpStack.size(); 
						
						for(int i=1; i<size; i++ ) {
							
							int a=tmpStack.pop();
							
							int b=tmpStack.top();
							
							
							if(a==b) {
								repeated.add(a);
								System.out.println(a);
								
								
							}								
						
						}
						stack=originalStack;